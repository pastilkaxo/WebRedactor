{"ast":null,"code":"import * as FabricTools from './FabricTools.js';\nexport const toolsMap = {\n  arrange: canvas => {\n    var _FabricTools$enableAr;\n    return (_FabricTools$enableAr = FabricTools.enableArrange) === null || _FabricTools$enableAr === void 0 ? void 0 : _FabricTools$enableAr.call(FabricTools, canvas);\n  },\n  // если есть реализация\n  selection: canvas => {\n    var _FabricTools$enableSe;\n    return (_FabricTools$enableSe = FabricTools.enableSelection) === null || _FabricTools$enableSe === void 0 ? void 0 : _FabricTools$enableSe.call(FabricTools, canvas);\n  },\n  crop: canvas => {\n    var _FabricTools$enableCr;\n    return (_FabricTools$enableCr = FabricTools.enableCrop) === null || _FabricTools$enableCr === void 0 ? void 0 : _FabricTools$enableCr.call(FabricTools, canvas);\n  },\n  figures: canvas => {},\n  // настройки через меню, фигуры добавляются отдельно\n  eraser: canvas => {\n    var _FabricTools$enableEr;\n    return (_FabricTools$enableEr = FabricTools.enableEraser) === null || _FabricTools$enableEr === void 0 ? void 0 : _FabricTools$enableEr.call(FabricTools, canvas);\n  },\n  // убедись, что функция есть в FabricTools\n  cut: canvas => {\n    var _FabricTools$cutSelec;\n    return (_FabricTools$cutSelec = FabricTools.cutSelected) === null || _FabricTools$cutSelec === void 0 ? void 0 : _FabricTools$cutSelec.call(FabricTools, canvas);\n  },\n  fill: canvas => {},\n  // через меню можно выбрать цвет\n  gradient: canvas => {},\n  // через меню выбираем цвета\n  zoom: canvas => {},\n  // через меню\n  picker: canvas => {},\n  // через меню\n  text: canvas => {},\n  // через меню\n  pencil: canvas => {\n    var _FabricTools$enablePe;\n    return (_FabricTools$enablePe = FabricTools.enablePencil) === null || _FabricTools$enablePe === void 0 ? void 0 : _FabricTools$enablePe.call(FabricTools, canvas, \"#000000\", 2);\n  },\n  // стандартный черный карандаш\n  hand: canvas => {\n    var _FabricTools$enableHa;\n    return (_FabricTools$enableHa = FabricTools.enableHand) === null || _FabricTools$enableHa === void 0 ? void 0 : _FabricTools$enableHa.call(FabricTools, canvas);\n  },\n  lasso: canvas => {\n    var _FabricTools$enableLa;\n    return (_FabricTools$enableLa = FabricTools.enableLasso) === null || _FabricTools$enableLa === void 0 ? void 0 : _FabricTools$enableLa.call(FabricTools, canvas);\n  }\n};","map":{"version":3,"names":["FabricTools","toolsMap","arrange","canvas","_FabricTools$enableAr","enableArrange","call","selection","_FabricTools$enableSe","enableSelection","crop","_FabricTools$enableCr","enableCrop","figures","eraser","_FabricTools$enableEr","enableEraser","cut","_FabricTools$cutSelec","cutSelected","fill","gradient","zoom","picker","text","pencil","_FabricTools$enablePe","enablePencil","hand","_FabricTools$enableHa","enableHand","lasso","_FabricTools$enableLa","enableLasso"],"sources":["C:/Users/Vladislav/Desktop/WebIllustrator/WebPhotoIllustrator/src/Components/Main/Editor/ToolsMap.js"],"sourcesContent":["import * as FabricTools from './FabricTools.js';\r\n\r\nexport const toolsMap = {\r\n  arrange: (canvas) => FabricTools.enableArrange?.(canvas), // если есть реализация\r\n  selection: (canvas) => FabricTools.enableSelection?.(canvas),\r\n  crop: (canvas) => FabricTools.enableCrop?.(canvas),\r\n  figures: (canvas) => {}, // настройки через меню, фигуры добавляются отдельно\r\n  eraser: (canvas) => FabricTools.enableEraser?.(canvas), // убедись, что функция есть в FabricTools\r\n  cut: (canvas) => FabricTools.cutSelected?.(canvas),\r\n  fill: (canvas) => {}, // через меню можно выбрать цвет\r\n  gradient: (canvas) => {}, // через меню выбираем цвета\r\n  zoom: (canvas) => {}, // через меню\r\n  picker: (canvas) => {}, // через меню\r\n  text: (canvas) => {}, // через меню\r\n  pencil: (canvas) => FabricTools.enablePencil?.(canvas, \"#000000\", 2), // стандартный черный карандаш\r\n  hand: (canvas) => FabricTools.enableHand?.(canvas),\r\n  lasso: (canvas) => FabricTools.enableLasso?.(canvas)\r\n};\r\n"],"mappings":"AAAA,OAAO,KAAKA,WAAW,MAAM,kBAAkB;AAE/C,OAAO,MAAMC,QAAQ,GAAG;EACtBC,OAAO,EAAGC,MAAM;IAAA,IAAAC,qBAAA;IAAA,QAAAA,qBAAA,GAAKJ,WAAW,CAACK,aAAa,cAAAD,qBAAA,uBAAzBA,qBAAA,CAAAE,IAAA,CAAAN,WAAW,EAAiBG,MAAM,CAAC;EAAA;EAAE;EAC1DI,SAAS,EAAGJ,MAAM;IAAA,IAAAK,qBAAA;IAAA,QAAAA,qBAAA,GAAKR,WAAW,CAACS,eAAe,cAAAD,qBAAA,uBAA3BA,qBAAA,CAAAF,IAAA,CAAAN,WAAW,EAAmBG,MAAM,CAAC;EAAA;EAC5DO,IAAI,EAAGP,MAAM;IAAA,IAAAQ,qBAAA;IAAA,QAAAA,qBAAA,GAAKX,WAAW,CAACY,UAAU,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAAL,IAAA,CAAAN,WAAW,EAAcG,MAAM,CAAC;EAAA;EAClDU,OAAO,EAAGV,MAAM,IAAK,CAAC,CAAC;EAAE;EACzBW,MAAM,EAAGX,MAAM;IAAA,IAAAY,qBAAA;IAAA,QAAAA,qBAAA,GAAKf,WAAW,CAACgB,YAAY,cAAAD,qBAAA,uBAAxBA,qBAAA,CAAAT,IAAA,CAAAN,WAAW,EAAgBG,MAAM,CAAC;EAAA;EAAE;EACxDc,GAAG,EAAGd,MAAM;IAAA,IAAAe,qBAAA;IAAA,QAAAA,qBAAA,GAAKlB,WAAW,CAACmB,WAAW,cAAAD,qBAAA,uBAAvBA,qBAAA,CAAAZ,IAAA,CAAAN,WAAW,EAAeG,MAAM,CAAC;EAAA;EAClDiB,IAAI,EAAGjB,MAAM,IAAK,CAAC,CAAC;EAAE;EACtBkB,QAAQ,EAAGlB,MAAM,IAAK,CAAC,CAAC;EAAE;EAC1BmB,IAAI,EAAGnB,MAAM,IAAK,CAAC,CAAC;EAAE;EACtBoB,MAAM,EAAGpB,MAAM,IAAK,CAAC,CAAC;EAAE;EACxBqB,IAAI,EAAGrB,MAAM,IAAK,CAAC,CAAC;EAAE;EACtBsB,MAAM,EAAGtB,MAAM;IAAA,IAAAuB,qBAAA;IAAA,QAAAA,qBAAA,GAAK1B,WAAW,CAAC2B,YAAY,cAAAD,qBAAA,uBAAxBA,qBAAA,CAAApB,IAAA,CAAAN,WAAW,EAAgBG,MAAM,EAAE,SAAS,EAAE,CAAC,CAAC;EAAA;EAAE;EACtEyB,IAAI,EAAGzB,MAAM;IAAA,IAAA0B,qBAAA;IAAA,QAAAA,qBAAA,GAAK7B,WAAW,CAAC8B,UAAU,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAAvB,IAAA,CAAAN,WAAW,EAAcG,MAAM,CAAC;EAAA;EAClD4B,KAAK,EAAG5B,MAAM;IAAA,IAAA6B,qBAAA;IAAA,QAAAA,qBAAA,GAAKhC,WAAW,CAACiC,WAAW,cAAAD,qBAAA,uBAAvBA,qBAAA,CAAA1B,IAAA,CAAAN,WAAW,EAAeG,MAAM,CAAC;EAAA;AACtD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}