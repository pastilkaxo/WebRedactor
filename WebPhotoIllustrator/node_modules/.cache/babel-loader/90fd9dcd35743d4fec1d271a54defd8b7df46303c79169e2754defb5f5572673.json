{"ast":null,"code":"import { fabric } from \"fabric\";\n\n// --- ARRANGE / MOVE ---\nexport function enableArrange(canvas) {\n  canvas.isDrawingMode = false;\n  canvas.selection = true;\n  canvas.forEachObject(obj => obj.selectable = true);\n}\n\n// --- SELECTION ---\nexport function enableSelection(canvas) {\n  canvas.isDrawingMode = false;\n  canvas.selection = true;\n  canvas.forEachObject(obj => obj.selectable = true);\n}\n\n// --- CROP ---\nexport function enableCrop(canvas) {\n  canvas.isDrawingMode = false;\n  canvas.selection = false;\n  // Можно добавить прямоугольник маски для обрезки\n  // Возвращает функцию, чтобы обрезать выбранный объект\n  return function cropSelected() {\n    const active = canvas.getActiveObject();\n    if (!active) return;\n    active.clone(cloned => {\n      canvas.remove(active);\n      canvas.add(cloned);\n      cloned.clipPath = new fabric.Rect({\n        left: 0,\n        top: 0,\n        width: cloned.width,\n        height: cloned.height\n      });\n    });\n  };\n}\n\n// --- FIGURES ---\nexport function addFigure(canvas, type = \"rect\", options = {}) {\n  if (!canvas) return;\n  const canvasWidth = canvas.getWidth();\n  const canvasHeight = canvas.getHeight();\n  let shape;\n  switch (type) {\n    case \"rect\":\n      shape = new fabric.Rect({\n        width: 100,\n        height: 60,\n        ...options\n      });\n      break;\n    case \"circle\":\n      shape = new fabric.Circle({\n        radius: 50,\n        ...options\n      });\n      break;\n    case \"line\":\n      shape = new fabric.Line([0, 0, 100, 0], {\n        strokeWidth: 2,\n        stroke: options.fill || \"black\",\n        ...options\n      });\n      break;\n    default:\n      return;\n  }\n\n  // Центрирование фигуры\n  shape.set({\n    originX: 'center',\n    originY: 'center',\n    left: canvasWidth / 2,\n    top: canvasHeight / 2\n  });\n  canvas.add(shape);\n  canvas.setActiveObject(shape);\n  canvas.requestRenderAll();\n}\n\n// --- ERASER ---\nexport function enableEraser(canvas) {\n  canvas.isDrawingMode = false;\n  canvas.selection = false;\n  const eraser = new fabric.EraserBrush(canvas);\n  canvas.freeDrawingBrush = eraser;\n  canvas.isDrawingMode = true;\n}\n\n// --- CUT ---\nexport function cutSelected(canvas) {\n  const active = canvas.getActiveObject();\n  if (!active) return;\n  canvas.remove(active);\n}\n\n// --- FILL ---\nexport function fillSelected(canvas, color = \"red\") {\n  const active = canvas.getActiveObject();\n  if (!active) return;\n  if (\"fill\" in active) active.set({\n    fill: color\n  });\n  canvas.renderAll();\n}\n\n// --- GRADIENT ---\nexport function applyGradient(canvas, active, colors = [\"red\", \"blue\"]) {\n  if (!active) return;\n  active.set(\"fill\", new fabric.Gradient({\n    type: 'linear',\n    gradientUnits: 'pixels',\n    coords: {\n      x1: 0,\n      y1: 0,\n      x2: active.width,\n      y2: active.height\n    },\n    colorStops: colors.map((c, i) => ({\n      offset: i / (colors.length - 1),\n      color: c\n    }))\n  }));\n  canvas.renderAll();\n}\n\n// --- ZOOM ---\nexport function enableZoom(canvas) {\n  canvas.isDrawingMode = false;\n  canvas.selection = false;\n  // Реализация через события wheel уже есть в EditorContent\n}\n\n// --- PICKER ---\nexport function pickColor(canvas, pointer, callback) {\n  const objects = canvas.getObjects();\n  for (let i = objects.length - 1; i >= 0; i--) {\n    const obj = objects[i];\n    if (obj.containsPoint(pointer)) {\n      callback(obj.fill || \"#000000\");\n      break;\n    }\n  }\n}\n\n// --- TEXT ---\nexport function addText(canvas, text = \"Text\") {\n  const t = new fabric.Textbox(text, {\n    left: 100,\n    top: 100,\n    fontSize: 20\n  });\n  canvas.add(t);\n  canvas.setActiveObject(t);\n}\n\n// --- PENCIL ---\nexport function enablePencil(canvas, color = \"black\", width = 2) {\n  canvas.isDrawingMode = true;\n  canvas.freeDrawingBrush.color = color;\n  canvas.freeDrawingBrush.width = width;\n}\n\n// --- HAND / PAN ---\nexport function enableHand(canvas) {\n  canvas.isDrawingMode = false;\n  canvas.selection = false;\n  // Пан через mouse:down, mouse:move уже реализован в EditorContent\n}\n\n// --- LASSO ---\nexport function enableLasso(canvas) {\n  canvas.isDrawingMode = false;\n  canvas.selection = true;\n  // Можно использовать polygon selection (доп. реализация)\n}","map":{"version":3,"names":["fabric","enableArrange","canvas","isDrawingMode","selection","forEachObject","obj","selectable","enableSelection","enableCrop","cropSelected","active","getActiveObject","clone","cloned","remove","add","clipPath","Rect","left","top","width","height","addFigure","type","options","canvasWidth","getWidth","canvasHeight","getHeight","shape","Circle","radius","Line","strokeWidth","stroke","fill","set","originX","originY","setActiveObject","requestRenderAll","enableEraser","eraser","EraserBrush","freeDrawingBrush","cutSelected","fillSelected","color","renderAll","applyGradient","colors","Gradient","gradientUnits","coords","x1","y1","x2","y2","colorStops","map","c","i","offset","length","enableZoom","pickColor","pointer","callback","objects","getObjects","containsPoint","addText","text","t","Textbox","fontSize","enablePencil","enableHand","enableLasso"],"sources":["C:/Users/Vladislav/Desktop/WebIllustrator/WebPhotoIllustrator/src/Components/Main/Editor/FabricTools.js"],"sourcesContent":["import { fabric } from \"fabric\";\r\n\r\n// --- ARRANGE / MOVE ---\r\nexport function enableArrange(canvas) {\r\n  canvas.isDrawingMode = false;\r\n  canvas.selection = true;\r\n  canvas.forEachObject(obj => obj.selectable = true);\r\n}\r\n\r\n// --- SELECTION ---\r\nexport function enableSelection(canvas) {\r\n  canvas.isDrawingMode = false;\r\n  canvas.selection = true;\r\n  canvas.forEachObject(obj => obj.selectable = true);\r\n}\r\n\r\n// --- CROP ---\r\nexport function enableCrop(canvas) {\r\n  canvas.isDrawingMode = false;\r\n  canvas.selection = false;\r\n  // Можно добавить прямоугольник маски для обрезки\r\n  // Возвращает функцию, чтобы обрезать выбранный объект\r\n  return function cropSelected() {\r\n    const active = canvas.getActiveObject();\r\n    if (!active) return;\r\n    active.clone(cloned => {\r\n      canvas.remove(active);\r\n      canvas.add(cloned);\r\n      cloned.clipPath = new fabric.Rect({\r\n        left: 0,\r\n        top: 0,\r\n        width: cloned.width,\r\n        height: cloned.height\r\n      });\r\n    });\r\n  };\r\n}\r\n\r\n// --- FIGURES ---\r\nexport function addFigure(canvas, type = \"rect\", options = {}) {\r\n  if (!canvas) return;\r\n\r\n  const canvasWidth = canvas.getWidth();\r\n  const canvasHeight = canvas.getHeight();\r\n\r\n  let shape;\r\n  switch (type) {\r\n    case \"rect\":\r\n      shape = new fabric.Rect({ width: 100, height: 60, ...options });\r\n      break;\r\n    case \"circle\":\r\n      shape = new fabric.Circle({ radius: 50, ...options });\r\n      break;\r\n    case \"line\":\r\n      shape = new fabric.Line([0, 0, 100, 0], { strokeWidth: 2, stroke: options.fill || \"black\", ...options });\r\n      break;\r\n    default:\r\n      return;\r\n  }\r\n\r\n  // Центрирование фигуры\r\n  shape.set({\r\n    originX: 'center',\r\n    originY: 'center',\r\n    left: canvasWidth / 2,\r\n    top: canvasHeight / 2\r\n  });\r\n\r\n  canvas.add(shape);\r\n  canvas.setActiveObject(shape);\r\n  canvas.requestRenderAll();\r\n}\r\n\r\n// --- ERASER ---\r\nexport function enableEraser(canvas) {\r\n  canvas.isDrawingMode = false;\r\n  canvas.selection = false;\r\n\r\n  const eraser = new fabric.EraserBrush(canvas);\r\n  canvas.freeDrawingBrush = eraser;\r\n  canvas.isDrawingMode = true;\r\n}\r\n\r\n// --- CUT ---\r\nexport function cutSelected(canvas) {\r\n  const active = canvas.getActiveObject();\r\n  if (!active) return;\r\n  canvas.remove(active);\r\n}\r\n\r\n// --- FILL ---\r\nexport function fillSelected(canvas, color = \"red\") {\r\n  const active = canvas.getActiveObject();\r\n  if (!active) return;\r\n  if (\"fill\" in active) active.set({ fill: color });\r\n  canvas.renderAll();\r\n}\r\n\r\n// --- GRADIENT ---\r\nexport function applyGradient(canvas, active, colors = [\"red\", \"blue\"]) {\r\n  if (!active) return;\r\n  active.set(\"fill\", new fabric.Gradient({\r\n    type: 'linear',\r\n    gradientUnits: 'pixels',\r\n    coords: { x1: 0, y1: 0, x2: active.width, y2: active.height },\r\n    colorStops: colors.map((c, i) => ({ offset: i / (colors.length - 1), color: c }))\r\n  }));\r\n  canvas.renderAll();\r\n}\r\n\r\n// --- ZOOM ---\r\nexport function enableZoom(canvas) {\r\n  canvas.isDrawingMode = false;\r\n  canvas.selection = false;\r\n  // Реализация через события wheel уже есть в EditorContent\r\n}\r\n\r\n// --- PICKER ---\r\nexport function pickColor(canvas, pointer, callback) {\r\n  const objects = canvas.getObjects();\r\n  for (let i = objects.length - 1; i >= 0; i--) {\r\n    const obj = objects[i];\r\n    if (obj.containsPoint(pointer)) {\r\n      callback(obj.fill || \"#000000\");\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\n// --- TEXT ---\r\nexport function addText(canvas, text = \"Text\") {\r\n  const t = new fabric.Textbox(text, { left: 100, top: 100, fontSize: 20 });\r\n  canvas.add(t);\r\n  canvas.setActiveObject(t);\r\n}\r\n\r\n// --- PENCIL ---\r\nexport function enablePencil(canvas, color = \"black\", width = 2) {\r\n  canvas.isDrawingMode = true;\r\n  canvas.freeDrawingBrush.color = color;\r\n  canvas.freeDrawingBrush.width = width;\r\n}\r\n\r\n// --- HAND / PAN ---\r\nexport function enableHand(canvas) {\r\n  canvas.isDrawingMode = false;\r\n  canvas.selection = false;\r\n  // Пан через mouse:down, mouse:move уже реализован в EditorContent\r\n}\r\n\r\n// --- LASSO ---\r\nexport function enableLasso(canvas) {\r\n  canvas.isDrawingMode = false;\r\n  canvas.selection = true;\r\n  // Можно использовать polygon selection (доп. реализация)\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}